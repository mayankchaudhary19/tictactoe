{"version":3,"sources":["TicTacToe.js","App.js","utils/boardUtil.js","reportWebVitals.js","index.js"],"names":["TicTacToe","useContext","BoardContext","board","setBoard","useState","player","setPlayer","style","width","height","display","justifyContent","alignItems","flexDirection","map","row","rowIdx","item","colIdx","onClick","updatedBoard","produce","draftBoard","React","createContext","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA8DeA,MAxDf,WAEC,MAA0BC,qBAAWC,GAA/BC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,SAEb,EAA0BC,mBAAS,GAAnC,mBAAKC,EAAL,KAAaC,EAAb,KAKA,OACC,qBACCC,MAAO,CACNC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,OAPjB,SAUEX,EAAMY,KAAI,SAAUC,EAAKC,GACzB,OACC,qBACCT,MAAO,CACNG,QAAS,OACTG,cAAe,UAHjB,SAMEE,EAAID,KAAI,SAAUG,EAAMC,GACxB,OACC,wBACCX,MAAO,CACNE,OAAQ,QACRD,MAAO,SAERW,QAAS,WACR,IAAMC,EAAeC,YAAQnB,GAAO,SAACoB,IACD,GAA/BA,EAAWN,GAAQE,KACtBI,EAAWN,GAAQE,GAAUb,MAG/BF,EAASiB,GACTd,EAAoB,GAAVD,EAAc,EAAI,IAZ9B,UAeW,GAATY,EAAa,IAAMA,eC/CzBhB,EAAesB,IAAMC,gBACzB,SAASC,IAER,MAAwBrB,mBCNZ,CACX,EAAE,GAAI,GAAI,GACV,EAAE,GAAI,GAAI,GACV,EAAE,GAAI,GAAI,KDGX,mBAAKF,EAAL,KAAYC,EAAZ,KACA,OAEC,aADA,CACCF,EAAayB,SAAd,CAAuBC,MAAO,CAAEzB,QAAOC,YAAvC,SACC,cAAC,EAAD,MEXH,IAYeyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACd,EAAD,MAEDe,SAASC,eAAe,SAMzBb,M","file":"static/js/main.adb60bd6.chunk.js","sourcesContent":["//creating an inner component ( of ./App.js)\n\nimport produce from \"immer\";\nimport { useContext, useState } from \"react\";\nimport { BoardContext } from \"./App\";\n\nfunction TicTacToe() {\n\t// getting board from context(BoardCoontext) defined in outer component(App.js)\n\tlet { board, setBoard } = useContext(BoardContext);\n\t// we could have directly used the board here as well, now we'll create the player here\n\tlet [player, setPlayer] = useState(0);\n\t// Array destructuring :\n\t// let arr= useState(0);\n\t// let player = arr[0];\n\t// let setPlayer = arr[1];\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\twidth: \"100vw\", //view port width\n\t\t\t\theight: \"100vh\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tflexDirection: \"row\",\n\t\t\t}}\n\t\t>\n\t\t\t{board.map(function (row, rowIdx) {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{row.map(function (item, colIdx) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\theight: \"100px\",\n\t\t\t\t\t\t\t\t\t\twidth: \"100px\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={function () {\n\t\t\t\t\t\t\t\t\t\tconst updatedBoard = produce(board, (draftBoard) => {\n\t\t\t\t\t\t\t\t\t\t\tif (draftBoard[rowIdx][colIdx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tdraftBoard[rowIdx][colIdx] = player;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetBoard(updatedBoard);\n\t\t\t\t\t\t\t\t\t\tsetPlayer(player == 0 ? 1 : 0);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item == -1 ? \" \" : item}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default TicTacToe;\n","import React, { useState } from \"react\";\nimport TicTacToe from \"./TicTacToe\";\nimport { createBoard } from \"./utils/boardUtil\";\n// context to be used in TicTacTpes\nlet BoardContext = React.createContext();\nfunction App() {\n\t// to get the state in inner component- TicTacToe\n\tlet [board, setBoard] = useState(createBoard());\n\treturn (\n\t\t// using BoardContext.Provider we could now use board and setBoard in TicTacToe with the help of BoardContext\n\t\t<BoardContext.Provider value={{ board, setBoard }}>\n\t\t\t<TicTacToe />\n\t\t</BoardContext.Provider>\n\t);\n}\n// chenge the import for ./index.js\nexport { App, BoardContext };\n","let createBoard = () => {\r\n\tlet borad = [\r\n\t\t[-1, -1, -1],\r\n\t\t[-1, -1, -1],\r\n\t\t[-1, -1, -1],\r\n\t];\r\n\treturn borad;\r\n};\r\n\r\nexport { createBoard };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}